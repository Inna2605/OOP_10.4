// Реализовать иерархию классов "Транспортное средство". В абстрактном базовом классе реализовать набор чисто виртуальных методов
//(ввод - вывод, расход топлива, получение стоимости, установка стоимости, грузоподъёмность, количество мест для пассажиров).
//Потомки переопределяют чисто виртуальные методы.Создать массив указателей базового класса.Каждый элемент указывает на объект потомка.
//Поочерёдно вызывая методы в переборном цикле, освобождаем память.

#include<iostream>
#include "motorbike.h"
using namespace std;

motorbike::motorbike():Transport(){}

void motorbike::Fuel()
{
	cout << "Введите количество израсходованного топлива мотоциклом: ";
	cin >> fuel;
}

void motorbike::Output()
{
	cout << "\nГрузоподъемность мотоцикла " << carrying
		<< "\nКоличество израсходованного топлива мотоциклом " << fuel
		<< "\nКоличество мест для пассажиров мотоцикла " << passengers
		<< "\nСтоимость поездки на мотоцикле " << price
		<< "\nРасход топлива мотоцикла " << consumption << endl << endl;
}

void motorbike::Consumption()
{
	float cargo, distance;
	cout << "Введите количество фактического груза на мотоцикле: ";
	cin >> cargo;
	cout << "Введите какое расстояние преодолел мотоцикл: ";
	cin >> distance;

	consumption = (fuel / carrying) * ((passengers + cargo) / distance);
}

void motorbike::Price()
{
	cout << "Введите стоимость поездки на мотоцикле: ";
	cin >> price;
}

void motorbike::Carrying()
{
	cout << "Введите грузоподъемность мотоцикла: ";
	cin >> carrying;
}

void motorbike::Passengers()
{
	cout << "Введите количество мест для пассажиров мотоцикла: ";
	cin >> passengers;
}

